What happens when you initialize a repository? Why do you need to do it?

Initialising the repository creates a .git folder for Git to store previous version of the project. 

How is the staging area different from the working directory and the repository?
What value do you think it offers?

The staging area holds the files that are ready to be committed. It allows the user to make one logical change per commit.

How can you use the staging area to make sure you have one commit per logical
change?

By using the git -add <filename> command, individual files with single logical changes can be addedd to the staging area. Using git commit then commit's the change to the master branch.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Branches allow the user to add new features or experimental changes to the code without disrupting the main codebase.

How do the diagrams help you visualize the branch structure?

Diagrams allow you to draw the branches to visualise parent nodes better.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
